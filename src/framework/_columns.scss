/*

Created by: https://getbootstrap.com/

*/

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    @include gutterize;
  }

  @each $breakpoint in map-keys($breakpoints) {

    @if $breakpoint != 'xsm' and $breakpoint != 'xlg' {

      $infix: breakpoint-infix($breakpoint, $breakpoints);
  
      // Allow columns to stretch full width below their breakpoints
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
      .col#{$infix},
      .col#{$infix}-auto {
        @extend %grid-column;
      }
  
      @include breakpoint($breakpoint, $breakpoints) {
        // Provide basic `.col-{bp}` classes for equal-width flexbox columns
        .col#{$infix} {
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
        }
        .col#{$infix}-auto {
          flex: 0 0 auto;
          width: auto;
          max-width: none; // Reset earlier grid tiers
        }
  
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include flex-col($i, $columns);
          }
        }
  
        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through ($columns - 1) {
          @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
            .offset#{$infix}-#{$i} {
              @include offset($i, $columns);
            }
          }
        }
      }
    }
  }
}

@mixin order($infix, $columns){
  .order#{$infix}-first { order: -1; }
  .order#{$infix}-last { order: $columns + 1; }
  @for $i from 0 through $columns {
    .order#{$infix}-#{$i} { order: $i; }
  }
}
@mixin make-grid-order($columns: $grid-columns, $breakpoints: $grid-breakpoints) {

  @each $breakpoint in map-keys($breakpoints) {

    @if $breakpoint != 'xsm' and $breakpoint != 'xlg' {

      $infix: breakpoint-infix($breakpoint, $breakpoints);

      @include breakpoint($breakpoint, $breakpoints) {
        @include order($infix, $columns);
      }
    }
  }
  @include breakpoint-max(sm){
    @include order('-xs', $columns);
  }
}