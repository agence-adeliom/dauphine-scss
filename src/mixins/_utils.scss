%clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}
@mixin text-truncate(){
  @extend %clearfix;
}

%text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin text-truncate(){
  @extend %text-truncate;
}

@mixin invisible($visibility, $breakpoint: '') {

  @if $breakpoint {
    @include breakpoint($breakpoint){
      visibility: $visibility !important;
    }
  }
  @else {
    visibility: $visibility !important;
  }

}

@function number($string) {
  // Matrices
  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers: 0 1 2 3 4 5 6 7 8 9;

  // Result
  $result: 0;

  // Looping through all characters
  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);

    @if not $index {
      @warn "Unknown character `#{$character}`.";
      @return false;
    }

    $number: nth($numbers, $index);
    $result: $result * 10 + $number;
  }

  @return $result;
}

@function str-split($string, $separator) {
  $i: str-index($string, $separator);
  @if $i != null {
    @return append(
      str-slice($string, 1, $i - 1),
      str-split(str-slice($string, $i + str-length($separator)), $separator)
    );
  }
  @return $string;
}